name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  pr-title:
    name: Validate PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
            perf
            ci
            build
            revert

  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.filter.outputs.src }}
      tests: ${{ steps.filter.outputs.tests }}
      docs: ${{ steps.filter.outputs.docs }}
      workflows: ${{ steps.filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - 'src/**'
            tests:
              - 'tests/**'
            docs:
              - '**.md'
              - 'docs/**'
            workflows:
              - '.github/workflows/**'

  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR size
        run: |
          # Get the diff statistics
          ADDITIONS=$(git diff --numstat origin/${{ github.base_ref }}...${{ github.sha }} | awk '{ add += $1 } END { print add }')
          DELETIONS=$(git diff --numstat origin/${{ github.base_ref }}...${{ github.sha }} | awk '{ del += $2 } END { print del }')
          TOTAL=$((ADDITIONS + DELETIONS))

          echo "## PR Size Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Additions**: $ADDITIONS lines" >> $GITHUB_STEP_SUMMARY
          echo "- **Deletions**: $DELETIONS lines" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Changes**: $TOTAL lines" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ $TOTAL -gt 1000 ]; then
            echo "⚠️ **Warning**: This PR changes more than 1000 lines. Consider breaking it into smaller PRs." >> $GITHUB_STEP_SUMMARY
          elif [ $TOTAL -gt 500 ]; then
            echo "ℹ️ **Note**: This is a large PR (500+ lines). Please ensure thorough review." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ PR size is reasonable." >> $GITHUB_STEP_SUMMARY
          fi

  test-coverage-diff:
    name: Test Coverage Diff
    runs-on: ubuntu-latest
    if: needs.changes.outputs.src == 'true' || needs.changes.outputs.tests == 'true'
    needs: changes
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run coverage on base branch
        run: |
          git checkout origin/${{ github.base_ref }}
          pytest tests/ --cov=src --cov-report=xml:base-coverage.xml || true

      - name: Run coverage on PR branch
        run: |
          git checkout ${{ github.sha }}
          pytest tests/ --cov=src --cov-report=xml:pr-coverage.xml

      - name: Generate coverage report
        uses: 5monkeys/cobertura-action@v14
        with:
          path: pr-coverage.xml
          minimum_coverage: 80
          fail_below_threshold: false
          show_class_names: true
          only_changed_files: true

  utf-contract-check:
    name: UTF Contract Verification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check for new UTF contracts
        run: |
          # List all UTF contract files
          echo "## UTF Contract Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -d "contracts" ]; then
            CONTRACT_COUNT=$(find contracts -name "*.md" -type f | wc -l)
            echo "Found $CONTRACT_COUNT UTF contracts" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # Check if tests exist for each contract
            echo "### Contract Test Coverage:" >> $GITHUB_STEP_SUMMARY
            for contract in contracts/*.md; do
              CONTRACT_NAME=$(basename "$contract" .md)
              if grep -q "$CONTRACT_NAME" tests/test_*.py; then
                echo "- ✅ $CONTRACT_NAME has tests" >> $GITHUB_STEP_SUMMARY
              else
                echo "- ❌ $CONTRACT_NAME missing tests" >> $GITHUB_STEP_SUMMARY
              fi
            done
          else
            echo "No contracts directory found" >> $GITHUB_STEP_SUMMARY
          fi

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4

  pr-comment:
    name: PR Summary Comment
    runs-on: ubuntu-latest
    needs: [pr-title, changes, size-check]
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('## PR Analysis Report');
            });

            const body = `## PR Analysis Report

            ### Changes Detected
            - **Source Code**: ${{ needs.changes.outputs.src == 'true' && '✅ Changed' || '➖ No changes' }}
            - **Tests**: ${{ needs.changes.outputs.tests == 'true' && '✅ Changed' || '➖ No changes' }}
            - **Documentation**: ${{ needs.changes.outputs.docs == 'true' && '✅ Changed' || '➖ No changes' }}
            - **Workflows**: ${{ needs.changes.outputs.workflows == 'true' && '✅ Changed' || '➖ No changes' }}

            ### Quality Checks
            Please ensure all CI checks pass before merging.

            ### CAFE Methodology Compliance
            - [ ] UTF contracts updated (if applicable)
            - [ ] Tests cover new functionality
            - [ ] Documentation updated
            - [ ] Version bumped (if applicable)
            `;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
